# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-04-13 16:43
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import splitnsave.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='apartments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooms', models.IntegerField(default=1)),
                ('number_of_bedrooms', models.IntegerField(default=1)),
                ('number_of_bathrooms', models.IntegerField(default=1)),
                ('bathroom_type', models.CharField(default=None, max_length=100)),
                ('in_time', models.CharField(default='', max_length=100)),
                ('out_time', models.CharField(default='', max_length=100)),
                ('kitchen', models.BooleanField(default=False)),
                ('television', models.BooleanField(default=False)),
                ('heater', models.BooleanField(default=False)),
                ('air_conditioner', models.BooleanField(default=False)),
                ('internet', models.BooleanField(default=False)),
                ('medical_aid', models.BooleanField(default=False)),
                ('fire_alarm', models.BooleanField(default=False)),
                ('washing_machine', models.BooleanField(default=False)),
                ('parking', models.BooleanField(default=False)),
                ('canteen', models.BooleanField(default=False)),
                ('pets', models.BooleanField(default=False)),
                ('suitable_for_events', models.BooleanField(default=False)),
                ('smoking', models.BooleanField(default=False)),
                ('wheelchair', models.BooleanField(default=False)),
                ('elevator', models.BooleanField(default=False)),
                ('laptop_friendly', models.BooleanField(default=False)),
                ('pool', models.BooleanField(default=False)),
                ('gym', models.BooleanField(default=False)),
                ('location', models.CharField(default='', max_length=100)),
                ('family_friends_kids_friendly', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='books',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
                ('author_first_name', models.CharField(default=0, max_length=100)),
                ('author_last_name', models.CharField(default=0, max_length=100)),
                ('tag1', models.CharField(default='', max_length=100)),
                ('tag2', models.CharField(default='', max_length=100)),
                ('tag3', models.CharField(default='', max_length=100)),
                ('location', models.CharField(default='', max_length=100)),
                ('college', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='cabs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField()),
                ('starttime', models.CharField(max_length=100)),
                ('enddate', models.DateField()),
                ('endtime', models.CharField(max_length=100)),
                ('smoking', models.BooleanField(default=False)),
                ('car_type', models.CharField(default='', max_length=100)),
                ('car_service', models.CharField(default='', max_length=100)),
                ('car_name', models.CharField(default='', max_length=100)),
                ('pet', models.BooleanField(default=False)),
                ('music', models.BooleanField(default=False)),
                ('luggage', models.BooleanField(default=False)),
                ('kids', models.BooleanField(default=False)),
                ('non_stop_journey', models.BooleanField(default=False)),
                ('destination', models.CharField(default=None, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='car_name_list',
            fields=[
                ('car_name_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('car_name', models.CharField(choices=[('', ''), ('ABC', 'ABC')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='car_service_list',
            fields=[
                ('car_service_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('car_service', models.CharField(choices=[('', ''), ('Uber', 'Uber')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='car_type_list',
            fields=[
                ('car_type_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('car_type', models.CharField(choices=[('', ''), ('Sedan', 'Sedan')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='categories',
            fields=[
                ('category_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('category_name', models.CharField(choices=[('', ''), ('Cabs', 'Cabs'), ('Books', 'Books'), ('Laundary', 'Laundary'), ('Apartments', 'Apartments')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='chat_history',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(default=None, max_length=100000)),
                ('timestamp', models.DateTimeField(default=datetime.datetime(2016, 4, 13, 16, 43, 39, 783820))),
            ],
        ),
        migrations.CreateModel(
            name='city_list',
            fields=[
                ('city_id', models.IntegerField(default=splitnsave.models.city_number, primary_key=True, serialize=False)),
                ('city_name', models.CharField(choices=[('', ''), ('Ahmedabad', 'Ahmedabad'), ('Gandhinagar', 'Gandhinagar')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='institute_list',
            fields=[
                ('institute_id', models.IntegerField(default=splitnsave.models.institute_number, primary_key=True, serialize=False)),
                ('institute_name', models.CharField(choices=[('', ''), ('DA-IICT', 'DA-IICT'), ('Nirma Institute of Technology', 'Nirma Institute of Technology')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='keyword_list',
            fields=[
                ('keyword_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('keyword_name', models.CharField(choices=[('', ''), ('ABC', 'ABC')], default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='laundary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField()),
                ('starttime', models.CharField(default='', max_length=100)),
                ('enddate', models.DateField()),
                ('endtime', models.CharField(default='', max_length=100)),
                ('weight', models.IntegerField(default=0)),
                ('white_clothes', models.BooleanField(default=False)),
                ('fabric_softner', models.BooleanField(default=False)),
                ('steam_press', models.BooleanField(default=False)),
                ('dry_cleaning', models.BooleanField(default=False)),
                ('silk_clothes', models.BooleanField(default=False)),
                ('cotton_clothes', models.BooleanField(default=False)),
                ('light_clothes', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='post_reporting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='products',
            fields=[
                ('product_name', models.CharField(default='', max_length=100)),
                ('product_id', models.IntegerField(default=splitnsave.models.product_number, primary_key=True, serialize=False)),
                ('number_of_sharers', models.IntegerField(default=1)),
                ('number_of_sharers_left', models.IntegerField(default=0)),
                ('gender', models.CharField(default='', max_length=1000)),
                ('description', models.CharField(default=None, max_length=1000)),
                ('status', models.IntegerField(default=0)),
                ('image_url', models.URLField(default=0)),
                ('price', models.IntegerField(default=0)),
                ('confirm_date', models.DateField(blank=True, default=None, null=True)),
                ('post_date', models.DateField(default=datetime.date(2016, 4, 13), null=True)),
                ('location', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='profession_list',
            fields=[
                ('profession_id', models.IntegerField(default=splitnsave.models.profession_number, primary_key=True, serialize=False)),
                ('profession_name', models.CharField(choices=[('', ''), ('Student', 'Student'), ('abc', 'abc')], default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='sub_category_list',
            fields=[
                ('sub_category_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('sub_category_name', models.CharField(choices=[('', ''), ('ABC', 'ABC')], default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='tag_list',
            fields=[
                ('tag_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('tag_name', models.CharField(choices=[('', ''), ('ABC', 'ABC')], default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='transaction_ratings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='user_report_post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='user_report_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='user_reporting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('user_id', models.IntegerField(default=splitnsave.models.number)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('password', models.CharField(default='splitnsave', max_length=50)),
                ('verified', models.BooleanField(default=False)),
                ('contact_number', models.BigIntegerField(default=0)),
                ('birthday', models.DateField(default=None)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default=None, max_length=1)),
                ('status', models.IntegerField(default=0)),
                ('verification_code', models.CharField(default='asdfghjkl', max_length=1000)),
                ('rating', models.CharField(default='0', max_length=4)),
                ('image_url', models.URLField(default=0)),
                ('reported_by', models.IntegerField(default=0)),
                ('rated_by', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='transaction_history',
            fields=[
                ('product_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='splitnsave.products')),
                ('poster', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='poster', to='splitnsave.users')),
                ('seeker', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='seeker', to='splitnsave.users')),
                ('transact_status', models.IntegerField(default=0, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='user_interested',
            fields=[
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='splitnsave.users')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='splitnsave.products')),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name='users',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitnsave.city_list'),
        ),
        migrations.AddField(
            model_name='users',
            name='institute',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.institute_list'),
        ),
        migrations.AddField(
            model_name='users',
            name='profession',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.profession_list'),
        ),
        migrations.AddField(
            model_name='user_reporting',
            name='reportee',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reportee', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='user_reporting',
            name='reporter',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reporter', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='user_report_user',
            name='user1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user1', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='user_report_user',
            name='user2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='user_report_post',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='user_report_post',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='transaction_ratings',
            name='product_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='transaction_ratings',
            name='ratee',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='ratee', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='transaction_ratings',
            name='rater',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='rater', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='products',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitnsave.categories'),
        ),
        migrations.AddField(
            model_name='products',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='post_reporting',
            name='product_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='post_reporting',
            name='reporter',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='laundary',
            name='other_details',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='keyword_id1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword1', to='splitnsave.keyword_list'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='keyword_id2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword2', to='splitnsave.keyword_list'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='keyword_id3',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword3', to='splitnsave.keyword_list'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='other_details',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='sub_category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splitnsave.sub_category_list'),
        ),
        migrations.AddField(
            model_name='chat_history',
            name='receiver',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='chat_history',
            name='sender',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='splitnsave.users'),
        ),
        migrations.AddField(
            model_name='cabs',
            name='other_details',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='books',
            name='other_details',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='apartments',
            name='other_details',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.products'),
        ),
        migrations.AddField(
            model_name='transaction_history',
            name='rating',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='splitnsave.transaction_ratings'),
        ),
    ]
